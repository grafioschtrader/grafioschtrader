package grafioschtrader.entities;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.apache.commons.lang3.SerializationUtils;

import com.fasterxml.jackson.annotation.JsonIgnore;

import grafioschtrader.gtnet.GTNetMessageCodeTypes;
import grafioschtrader.gtnet.SendReceivedType;
import io.swagger.v3.oas.annotations.media.Schema;

@Entity
@Table(name = GTNetMessage.TABNAME)
@Schema(description = """
    This entity records the basic messages between the instances of the GT network.
    In addition, these messages are also used to communicate between the GT instances.""")
public class GTNetMessage extends BaseID {

  public static final String TABNAME = "gt_net_message";

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name = "id_gt_net_message")
  private Integer idGtNetMessage;

  @Schema(description = "Connection to GTNet")
  @Column(name = "id_gt_net")
  private Integer idGtNet;

  @Schema(description = "When was this message created. It must be UTC Time")
  @Column(name = "timestamp")
  @Temporal(TemporalType.TIMESTAMP)
  private Date timestamp;

  @Schema(description = "Distinguish whether the message was sent or received")
  @Column(name = "send_recv")
  private byte sendRecv;

  @Schema(description = "Used if this message refers to a previous one")
  @Column(name = "reply_to")
  private Integer replyTo;

  @Schema(description = "If the messages are generated by the system, then a code is transmitted")
  @Column(name = "message_code")
  private Short messageCode;
  
  @JsonIgnore
  @Schema(description = "Sometimes one or more corresponding values must be passed with the message code.")
  @Column(name = "message_code_value")
  private byte[] messageCodeValue;

  @Schema(description = "Contains optional a message. This message is mostly created by the user")
  @Column(name = "message")
  private String message;
  
  
  
  public GTNetMessage(Integer idGtNet, Date timestamp, byte sendRecv, Integer replyTo, Short messageCode,
      String message) {
    super();
    this.idGtNet = idGtNet;
    this.timestamp = timestamp;
    this.sendRecv = sendRecv;
    this.replyTo = replyTo;
    this.messageCode = messageCode;
    this.message = message;
  }

  public Integer getIdGtNetMessage() {
    return idGtNetMessage;
  }

  public void setIdGtNetMessage(Integer idGtNetMessage) {
    this.idGtNetMessage = idGtNetMessage;
  }

  public Integer getIdGtNet() {
    return idGtNet;
  }

  public void setIdGtNet(Integer idGtNet) {
    this.idGtNet = idGtNet;
  }
  

  public Date getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Date timestamp) {
    this.timestamp = timestamp;
  }

  public SendReceivedType getSendRecv() {
    return SendReceivedType.getSendReceivedType(sendRecv);
  }

  public void setSendRecv(SendReceivedType sendReceivedType) {
    this.sendRecv = sendReceivedType.getValue();
  }

  public Integer getReplyTo() {
    return replyTo;
  }

  public void setReplyTo(Integer replyTo) {
    this.replyTo = replyTo;
  }

  public GTNetMessageCodeTypes getMessageCode() {
    return GTNetMessageCodeTypes.getGTNetMessageCodeTypes(messageCode);
  }

  public void setMessageCode(GTNetMessageCodeTypes gtNetMessageCodeTypes) {
    this.messageCode = gtNetMessageCodeTypes.getValue();
  }
  
  public Serializable getMessageCodeValue() {
    return SerializationUtils.deserialize(messageCodeValue);
  }

  public void setMessageCodeValue(Serializable valueDesarialized) {
    this.messageCodeValue = SerializationUtils.serialize(valueDesarialized);
  }

  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  @Override
  public Integer getId() {
    return idGtNetMessage;
  }

}
