package grafioschtrader.entities;

import com.fasterxml.jackson.annotation.JsonIgnore;

import grafiosch.BaseConstants;
import grafiosch.entities.TenantBaseID;
import io.swagger.v3.oas.annotations.media.Schema;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;

@Schema(description = """
    This is the header data of a transaction import that is carried out using import templates.
    This header data can be created by the user or the system. The system creates it when an import
    is carried out using drag & drop. However, it is deleted again if the import is successful
    and only left if it fails. The user creates this header data when subsequently importing CSV or PDF files.
    """)
@Entity
@Table(name = ImportTransactionHead.TABNAME)
public class ImportTransactionHead extends TenantBaseID {

  public static final String TABNAME = "imp_trans_head";

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Basic(optional = false)
  @Column(name = "id_trans_head")
  private Integer idTransactionHead;

  @Schema(description = "This is a core entity, so it has a reference to tenant.")
  @JsonIgnore
  @Column(name = "id_tenant")
  private Integer idTenant;

  @Schema(description = "A transaction import references a single securities account.")
  @JoinColumn(name = "id_securitycash_account", referencedColumnName = "id_securitycash_account")
  @ManyToOne
  private Securityaccount securityaccount;

  @Schema(description = "The name can be created by the user or generated by the system.")
  @Basic(optional = false)
  @NotBlank
  @Size(min = 1, max = 40)
  private String name;

  @Schema(description = "The comment can be created by the user or generated by the system.")
  @Column(name = "note")
  @Size(max = BaseConstants.FID_MAX_LETTERS)
  private String note;

  public ImportTransactionHead() {
    super();
  }

  public ImportTransactionHead(Integer idTenant, Securityaccount securityaccount,
      @NotBlank @Size(min = 1, max = 40) String name, @Size(max = 1000) String note) {
    super();
    this.idTenant = idTenant;
    this.securityaccount = securityaccount;
    this.name = name;
    this.note = note;
  }

  public Integer getIdTransactionHead() {
    return idTransactionHead;
  }

  public void setIdTransactionHead(Integer idTransactionHead) {
    this.idTransactionHead = idTransactionHead;
  }

  @Override
  public Integer getIdTenant() {
    return idTenant;
  }

  @Override
  public void setIdTenant(Integer idTenant) {
    this.idTenant = idTenant;
  }

  public Securityaccount getSecurityaccount() {
    return securityaccount;
  }

  public void setSecurityaccount(Securityaccount securityaccount) {
    this.securityaccount = securityaccount;
  }

  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  @Override
  public Integer getId() {
    return this.idTransactionHead;
  }

  @Override
  public String toString() {
    return "ImportTransactionHead [idTransactionHead=" + idTransactionHead + ", idTenant=" + idTenant
        + ", securityaccount=" + securityaccount + ", name=" + name + ", note=" + note + "]";
  }

}
