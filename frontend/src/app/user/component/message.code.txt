 this.config = [
      {
        dataType: DataType.String,
        inputType: InputType.Select,
        labelKey: 'NAME_ID_RIGHTS',
        field: UserComponent.MAIN_FIELD,
        valueKeyHtmlOptions: [],
        usedLayoutColumns: 6
      },



 readData(): void {
     this.userService.getAllUsers().subscribe(users => {
       this.configObject.idUser.valueKeyHtmlOptions = this.createUserChooseProjectionHtmlOptions(users);
       this.entityList = users;
       this.setFieldValues();
     });
   }

   private createUserChooseProjectionHtmlOptions(userChooseProjectionList: UserChooseProjection[]): ValueKeyHtmlSelectOptions[] {
     const valueKeyHtmlSelectOptions: ValueKeyHtmlSelectOptions[] = [];
     userChooseProjectionList.forEach(userChooseProjection => {
       this.translateService.get(userChooseProjection.mostPrivilegedRole).subscribe(trans => {
         valueKeyHtmlSelectOptions.push(new ValueKeyHtmlSelectOptions(userChooseProjection.idUser,
           `${userChooseProjection.nickname} (${userChooseProjection.idUser}) - ${trans}`));
       });
     });
     return valueKeyHtmlSelectOptions;
   }
